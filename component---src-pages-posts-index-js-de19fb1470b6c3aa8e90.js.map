{"version":3,"sources":["webpack:///./src/pages/posts/index.js","webpack:///./src/components/link.js","webpack:///./src/helpers/capitalize.js","webpack:///./src/components/breadcrumb.js","webpack:///./src/layouts/center-layout.js","webpack:///./src/components/article-preview.js"],"names":["__webpack_exports__","data","_public_static_d_3446517160_json__WEBPACK_IMPORTED_MODULE_5__","split","groups","num","res","entries","Object","i","length","group","push","splitGroups","pages","nodes","reduce","acc","node","path","react__WEBPACK_IMPORTED_MODULE_6__","createElement","_layouts_center_layout__WEBPACK_IMPORTED_MODULE_8__","title","className","subtitle","react_helmet__WEBPACK_IMPORTED_MODULE_7__","defer","map","col","key","Fragment","_components_link__WEBPACK_IMPORTED_MODULE_9__","href","capitalize","ArticlePreview","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_ref","children","d","word","substr","toUpperCase","components_breadcrumb","props","crumbs","filter","p","crumb","curPath","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","next","done","value","name","isActive","crumbify","unshift","preact_compat_es","aria-label","components_link","CenterLayout","javascript","propTypes","PropTypes","bool","string","defaultProps","context","topic","react__WEBPACK_IMPORTED_MODULE_1__","style","paddingBottom","_link__WEBPACK_IMPORTED_MODULE_2__","excerpt","timeToRead","dateTime","dateShort","dateLong"],"mappings":"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","file":"component---src-pages-posts-index-js-de19fb1470b6c3aa8e90.js","sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby';\nimport CenterLayout from '../../layouts/center-layout';\nimport Link from '../../components/link'\nimport { capitalize } from '../../helpers/capitalize'\nimport ArticlePreview from '../../components/article-preview'\n\n// Group nodes by topic (school, money, bikes, etc...)\nconst getGroups = nodes => {\n  return nodes.reduce((acc, node) => {\n      const group = node.path.split('/')[2];\n      acc[group] = acc[group] || [];\n      acc[group].push(node);\n      return acc;\n    }, {})\n}\n\n// Split groups into num columns\nconst splitGroups = (groups, num) => {\n  const res = []\n  const entries = Object.entries(groups)\n  \n  for (let i = 0; i < entries.length; i++) {\n    let group = res[i % num] ? res[i % num] : []\n    group.push(entries[i])\n    res[i % num] = group\n  }\n\n  return res\n}\n\nexport default () => {\n  const data = useStaticQuery(\n    graphql`\n    {\n      pages: allSitePage(filter: {context: {title: {ne: null}}}) {\n        nodes {\n          path\n          context {\n            title\n            dateShort: date(formatString: \"YYYY-MM-DD\")\n            dateLong: date(formatString: \"MMMM DD, YYYY\")\n            timeToRead\n          }\n        }\n      }\n    }\n  `)\n\n  const groups = getGroups(data.pages.nodes)\n  const split = splitGroups(groups, 2)\n\n  return (\n    <CenterLayout\n      title={<h1 className=\"title is-2\">All Posts</h1>}\n      subtitle={(\n        <h2 className=\"subtitle is-4 has-text-grey-light\">\n          I hope something tickles your fancy\n        </h2>\n      )}\n      path={'/posts'}\n    >\n      <Helmet title=\"The Smart Posts\" defer={false} />\n      <div className=\"content is-medium\">\n        <div className=\"columns\">\n          {split.map(col => (\n            <div key={col[0][0]} className=\"column has-text-centered\">\n              {col.map(group => (\n                <React.Fragment key={group[0]}>\n                  <h3><Link className=\"title\" href={`/posts/${group[0]}`}>{capitalize(group[0])}</Link></h3>\n                  {group[1].map(ArticlePreview)}\n                </React.Fragment>))}\n            </div>\n          ))}\n        </div>\n      </div>\n    </CenterLayout>\n  )\n}\n","import React from 'react';\n\nexport default ({ href, className, children }) => (\n  <a href={href} className={className}>{children}</a>\n)","export const capitalize = word => word.substr(0, 1).toUpperCase() + word.substr(1, word.length - 1);","import React from 'react';\nimport Link from './link'\nimport { capitalize } from '../helpers/capitalize'\nimport './breadcrumb.scss'\n\n\nconst crumbify = (word, crumbs, curPath) => {\n  let path = ''\n  for (var crumb of crumbs) {\n    path += '/' + crumb;\n    if (word === crumb)\n      break\n  }\n\n  return {\n    name: capitalize(word),\n    path: path,\n    isActive: path === curPath\n  }\n}\n\nexport default (props) => {\n  let crumbs = props.path.split('/')\n      .filter(p => p)\n  crumbs = crumbs.map(crumb => crumbify(crumb, crumbs, props.path))\n  crumbs.unshift({name: 'Home', path: '/', isActive: false})\n  \n  return (\n    <nav className=\"breadcrumb is-marginless is-centered\" aria-label=\"breadcrumbs\">\n      <ul>\n        {crumbs.map(crumb => (\n          <li key={crumb.name} className={crumb.isActive ? 'is-active' : ''}><Link href={crumb.path}>{crumb.name}</Link></li>\n        ))}\n      </ul>\n    </nav>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Breadcrumb from '../components/breadcrumb'\nimport './center-layout.scss'\n\n\nexport default function CenterLayout(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"column is-8 is-offset-2\">\n        {props.javascript && (\n          <noscript key=\"noscript\">\n            Some things might not work because Javascript is disabled, but you aren't missing out on much.\n          </noscript>)}\n        <Breadcrumb path={props.path} />\n        <div className=\"section titles-section\">\n          {props.title}\n          {props.subtitle}\n        </div>\n        {props.children}\n      </div>\n    </div>\n  )\n}\n\nCenterLayout.propTypes = {\n  title: PropTypes.node,\n  subtitle: PropTypes.node,\n  javascript: PropTypes.bool,\n  children: PropTypes.node,\n  path: PropTypes.string\n}\n\nCenterLayout.defaultProps = {\n  javascript: false\n}\n","import React from 'react'\nimport Link from './link'\nimport './article-preview.scss'\n\nexport default (node) => {\n  const { path, context } = node\n  const topic = path.split('/')[2]\n\n  return (\n    <div key={path} style={{paddingBottom: '3rem'}}>\n      <div className=\"media\">\n        <div className=\"media-content has-text-centered no-overflow\">\n          <Link href={path} className={`title article-title ${context.excerpt ? 'is-3' : 'is-4'}`}>\n            {context.title}\n          </Link>\n          <div className=\"tags has-addons level-item\">\n            {context.excerpt\n              ? <Link className=\"tag is-rounded is-warning\" href={`/posts/${topic}`}>\n                  {topic}\n                </Link>\n              : <span className=\"tag is-rounded is-warning\">\n                  {context.timeToRead} mins\n                </span>\n            }\n            <span className=\"tag is-rounded\">\n              <time dateTime={context.dateShort}>{context.dateLong}</time>\n            </span>\n          </div>\n        </div>\n      </div>\n      {context.excerpt && \n        <div className=\"article-body\">\n          <p>{context.excerpt}</p>\n        </div>\n      }\n      </div>\n  )\n}\n"],"sourceRoot":""}